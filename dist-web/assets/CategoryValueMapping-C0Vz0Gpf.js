var g=Object.defineProperty,m=Object.defineProperties;var p=Object.getOwnPropertyDescriptors;var r=Object.getOwnPropertySymbols;var _=Object.prototype.hasOwnProperty,f=Object.prototype.propertyIsEnumerable;var c=(o,n,e)=>n in o?g(o,n,{enumerable:!0,configurable:!0,writable:!0,value:e}):o[n]=e,l=(o,n)=>{for(var e in n||(n={}))_.call(n,e)&&c(o,e,n[e]);if(r)for(var e of r(n))f.call(n,e)&&c(o,e,n[e]);return o},i=(o,n)=>m(o,p(n));const h=o=>{const{dimensions:n,measures:e}=o;return{category:n[0]||"__MeasureName__",value:e[0]||"__MeasureValue__"}},y=(o,n)=>{const{fieldSelection:e}=n;if(!e||e.dimensions.length===0&&e.measures.length===0)return o;console.log("🎨 类别-数值自动通道映射，字段选择:",e);const u=h(e),s={};Object.entries(u).forEach(([d,t])=>{t!=null&&(s[d]=t)}),console.log("🔗 类别-数值通道映射结果:",s);const a=[s];return n.encodes=a,i(l({},o),{encodes:a})};export{y as m};
//# sourceMappingURL=CategoryValueMapping-C0Vz0Gpf.js.map
