{"version":3,"file":"Table-B6V9gAIp.js","sources":["../../src/pipeline/vizSeed/channelMapping/TableRowColumnMapping.ts","../../src/pipeline/vizSeed/vizSeedPipelines/Table.ts"],"sourcesContent":["/**\n * 表格行列映射策略\n * 功能：rowDimension通道使用第一个维度，columnDimension通道使用第二个维度，measure通道使用第一个指标\n * 适用于：表格、透视表等需要行列展示的图表\n */\n\nimport { ChannelMapping } from '../../../types/charts';\nimport { FieldSelection, PipelineStep } from '../../PipelineCore';\n\n/**\n * 表格行列映射函数\n */\nconst mapTableRowColumnChannels = (fieldSelection: FieldSelection): ChannelMapping => {\n  const { dimensions, measures } = fieldSelection;\n  \n  return {\n    rowDimension: dimensions[0],      // 行维度\n    columnDimension: dimensions[1],   // 列维度\n    measure: measures[0]              // 指标字段\n  };\n};\n\n/**\n * 表格行列通道映射Pipeline步骤\n */\nexport const mapTableRowColumn: PipelineStep = (vizSeed: any, context: any) => {\n  const { fieldSelection } = context;\n  \n  if (!fieldSelection || (fieldSelection.dimensions.length === 0 && fieldSelection.measures.length === 0)) {\n    return vizSeed;\n  }\n\n  console.log(`🎨 表格行列自动通道映射，字段选择:`, fieldSelection);\n  \n  // 使用表格行列映射策略\n  const autoMapping = mapTableRowColumnChannels(fieldSelection);\n  \n  // 过滤掉undefined的值\n  const filteredMapping: any = {};\n  Object.entries(autoMapping).forEach(([key, value]) => {\n    if (value !== undefined && value !== null) {\n      (filteredMapping as any)[key] = value;\n    }\n  });\n  \n  console.log(`🔗 表格行列通道映射结果:`, filteredMapping);\n  \n  // 更新context和vizSeed\n  const updatedEncodes = [filteredMapping];\n  context.encodes = updatedEncodes;\n  \n  return {\n    ...vizSeed,\n    encodes: updatedEncodes\n  };\n};","/**\n * TABLE图表VizSeed Pipeline\n */\n\nimport { pipeline, PipelineStep } from '../../PipelineCore';\nimport { chartAdapterStep } from '../ChartAdapterModule';\nimport { vizSeedInitStep } from '../VizSeedInitModule';\nimport { dataReshapeStep } from '../DataReshapeModule';\nimport { vizSeedCleanupStep } from '../VizSeedCleanupModule';\nimport { mapTableRowColumn } from '../channelMapping/TableRowColumnMapping';\n\n// 创建TABLE图表VizSeed Pipeline\nexport const createTableVizSeedPipeline = () => {\n  const buildTableVizSeedSteps: PipelineStep[] = [\n    vizSeedInitStep,\n    chartAdapterStep,\n    dataReshapeStep,\n    mapTableRowColumn,\n    vizSeedCleanupStep\n  ];\n  return pipeline(buildTableVizSeedSteps, {});\n};"],"names":["mapTableRowColumnChannels","fieldSelection","dimensions","measures","mapTableRowColumn","vizSeed","context","autoMapping","filteredMapping","key","value","updatedEncodes","__spreadProps","__spreadValues","createTableVizSeedPipeline","pipeline","vizSeedInitStep","chartAdapterStep","dataReshapeStep","vizSeedCleanupStep"],"mappings":"spBAYA,MAAMA,EAA6BC,GAAmD,CACpF,KAAM,CAAE,WAAAC,EAAY,SAAAC,CAAA,EAAaF,EAEjC,MAAO,CACL,aAAcC,EAAW,CAAC,EAC1B,gBAAiBA,EAAW,CAAC,EAC7B,QAASC,EAAS,CAAC,CAAA,CAEvB,EAKaC,EAAkC,CAACC,EAAcC,IAAiB,CAC7E,KAAM,CAAE,eAAAL,GAAmBK,EAE3B,GAAI,CAACL,GAAmBA,EAAe,WAAW,SAAW,GAAKA,EAAe,SAAS,SAAW,EACnG,OAAOI,EAGT,QAAQ,IAAI,sBAAuBJ,CAAc,EAGjD,MAAMM,EAAcP,EAA0BC,CAAc,EAGtDO,EAAuB,CAAA,EAC7B,OAAO,QAAQD,CAAW,EAAE,QAAQ,CAAC,CAACE,EAAKC,CAAK,IAAM,CACzBA,GAAU,OAClCF,EAAwBC,CAAG,EAAIC,EAClC,CACD,EAED,QAAQ,IAAI,iBAAkBF,CAAe,EAG7C,MAAMG,EAAiB,CAACH,CAAe,EACvC,OAAAF,EAAQ,QAAUK,EAEXC,EAAAC,EAAA,GACFR,GADE,CAEL,QAASM,CAAA,EAEb,EC3CaG,EAA6B,IAQjCC,EAPwC,CAC7CC,EACAC,EACAC,EACAd,EACAe,CAAA,EAEsC,EAAE"}