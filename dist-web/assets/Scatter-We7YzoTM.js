var m=Object.defineProperty,S=Object.defineProperties;var u=Object.getOwnPropertyDescriptors;var i=Object.getOwnPropertySymbols;var f=Object.prototype.hasOwnProperty,g=Object.prototype.propertyIsEnumerable;var a=(o,t,e)=>t in o?m(o,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):o[t]=e,p=(o,t)=>{for(var e in t||(t={}))f.call(t,e)&&a(o,e,t[e]);if(i)for(var e of i(t))g.call(t,e)&&a(o,e,t[e]);return o},c=(o,t)=>S(o,u(t));import{p as h}from"./PipelineCore-BG5ZN1GD.js";import{v as z,c as M,a as b}from"./VizSeedCleanupModule-ZFK2GdwZ.js";import{d as V}from"./DataReshapeModule-BQgI6HBh.js";import"./VizSeedBuilder-WtpOYMGP.js";import"./index-xfVeL4SO.js";const w=o=>{const{dimensions:t,measures:e}=o;return{x:e[0],y:e[1],color:t[0]}},C=(o,t)=>{const{fieldSelection:e}=t;if(!e||e.dimensions.length===0&&e.measures.length===0)return o;console.log("🎨 双指标自动通道映射，字段选择:",e);const d=w(e),s={};Object.entries(d).forEach(([l,n])=>{n!=null&&(s[l]=n)}),console.log("🔗 双指标通道映射结果:",s);const r=[s];return t.encodes=r,c(p({},o),{encodes:r})},A=()=>h([z,M,V,C,b],{});export{A as createScatterVizSeedPipeline};
//# sourceMappingURL=Scatter-We7YzoTM.js.map
