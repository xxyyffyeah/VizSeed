=== 🔄 维度重塑功能演示 ===

📊 原始多维数据:
数据结构: 4个维度 + 2个指标
维度: store, city, category, brand
指标: sales, profit
数据量: 8

=== 📈 演示1: 饼图自动升维 ===
场景: 饼图需要1个维度+1个指标，但原数据有2个指标
重塑结果:
- 重塑类型: composite
- 重塑策略: smart-auto
- 原始维度数: 4
- 重塑后维度数: 2
- 原始指标数: 2
- 重塑后指标数: 1
- 数据量变化: 8 -> 108

升维后的数据样例:
[
  {
    "store": "苹果专卖店",
    "__MeasureName__": "北京_手机_iPhone_sales",
    "__MeasureValue__": 15000
  },
  {
    "store": "苹果专卖店",
    "__MeasureName__": "北京_手机_iPhone_profit",
    "__MeasureValue__": 3000
  },
  {
    "store": "苹果专卖店",
    "__MeasureName__": "北京_手机_Samsung_sales",
    "__MeasureValue__": 8000
  },
  {
    "store": "苹果专卖店",
    "__MeasureName__": "北京_手机_Samsung_profit",
    "__MeasureValue__": 1600
  }
]

=== 📊 演示2: 柱状图手动降维 ===
场景: 将brand维度降维，转换为多个指标列
降维结果:
- 重塑类型: reduce
- 降维的维度: brand
- 原始维度: [
  "store",
  "city",
  "category",
  "brand"
]
- 降维后维度: [
  "store",
  "city",
  "category"
]
- 原始指标: [
  "sales"
]
- 降维后指标: [
  "iPhone_sales",
  "Samsung_sales",
  "iPad_sales"
]

降维后的数据样例:
[
  {
    "store": "苹果专卖店",
    "city": "北京",
    "category": "手机",
    "iPhone_sales": 15000,
    "Samsung_sales": 8000,
    "iPad_sales": 0
  },
  {
    "store": "苹果专卖店",
    "city": "北京",
    "category": "平板",
    "iPhone_sales": 0,
    "Samsung_sales": 0,
    "iPad_sales": 6000
  },
  {
    "store": "电子城",
    "city": "上海",
    "category": "手机",
    "iPhone_sales": 12000,
    "Samsung_sales": 9000,
    "iPad_sales": 0
  }
]

=== 🔍 演示3: 图表适配分析 ===
场景: 分析数据结构与图表类型的匹配度
适配分析结果:
- 当前数据结构: {
  "dimensions": 4,
  "measures": 2,
  "dimensionNames": [
    "store",
    "city",
    "category",
    "brand"
  ],
  "measureNames": [
    "sales",
    "profit"
  ]
}
- 目标图表要求: 饼图：必须1个维度，1个指标
- 是否需要重塑: true
- 建议操作: elevate
- 操作原因: 饼图需要单一指标，将2个指标升维为指标名称维度
- 匹配置信度: 

=== 🎨 演示4: 生成图表规范 ===
场景: 基于重塑后的数据生成VChart规范
VChart饼图规范:
{
  "type": "pie",
  "categoryField": "store",
  "valueField": "sales",
  "data": [
    {
      "store": "苹果专卖店",
      "city": "北京",
      "category": "手机",
      "brand": "iPhone",
      "sales": 15000,
      "profit": 3000
    },
    {
      "store": "苹果专卖店",
      "city": "北京",
      "category": "手机",
      "brand": "Samsung",
      "sales": 8000,
      "profit": 1600
    },
    {
      "store": "苹果专卖店",
      "city": "北京",
      "category": "平板",
      "brand": "iPad",
      "sales": 6000,
      "profit": 1200
    },
    {
      "store": "电子城",
      "city": "上海",
      "category": "手机",
      "brand": "iPhone",
      "sales": 12000,
      "profit": 2400
    },
    {
      "store": "电子城",
      "city": "上海",
      "category": "手机",
      "brand": "Samsung",
      "sales": 9000,
      "profit": 1800
    },
    {
      "store": "电子城",
      "city": "上海",
      "category": "平板",
      "brand": "iPad",
      "sales": 5000,
      "profit": 1000
    },
    {
      "store": "数码广场",
      "city": "广州",
      "category": "手机",
      "brand": "iPhone",
      "sales": 10000,
      "profit": 2000
    },
    {
      "store": "数码广场",
      "city": "广州",
      "category": "平板",
      "brand": "iPad",
      "sales": 4000,
      "profit": 800
    }
  ],
  "legends": {
    "visible": true,
    "orient": "right",
    "position": "middle"
  },
  "label": {
    "visible": true
  },
  "tooltip": {
    "visible": true
  }
}

=== ⚠️ 演示5: 关闭自动重塑的对比 ===
场景: 同样的数据和图表类型，但关闭自动重塑
关闭重塑的结果:
- 重塑类型: none
- 维度数量: 4
- 指标数量: 2
- 数据量: 8
⚠️ 注意: 这种情况下数据结构可能不适合饼图要求

=== 📋 功能总结 ===
维度重塑功能提供以下能力:
✅ 自动升维: 多指标转为单指标+指标名称维度
✅ 手动降维: 指定维度转为多个指标列
✅ 智能分析: 自动检测数据结构与图表要求的匹配度
✅ 策略建议: 提供最佳的重塑策略和原因
✅ 完整追踪: 记录重塑过程和结果信息
✅ 类型安全: 保持数据类型和结构的一致性